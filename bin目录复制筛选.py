# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'achange.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import csv
import pandas as pd
from PyQt5 import QtCore, QtGui, QtWidgets
import os
import time
import threading
import shutil
import re
import xlrd
from xlutils import copy

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110, 130, 151, 16))
        self.label.setObjectName("label")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(280, 120, 291, 41))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(310, 260, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.t)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "BIN目录复制筛选python程序"))
        self.label.setText(_translate("MainWindow", "请输入要修改的目录："))
        self.pushButton.setText(_translate("MainWindow", "点击开始"))
    def t(self):
        t1 = threading.Thread(target=self.click, args=())
        t1.start()
    def click(self):
        path = self.plainTextEdit.toPlainText()
        pattern = re.compile('ER.*')
        while (True):
            for root, dir, files in os.walk(path):
                for file in files:
                    if re.match(pattern, file):
                        a = file.replace(' ', '')
                        file = os.path.join(root, file)
                        second = a[len(a) - 4:]
                        a = a[:len(a) - 4]
                        if len(a) == 17:
                            b = a[8:11] + a[2:4] + hex(int(a[4:6])).upper().replace('0X', '') + a[6:8] + a[len(a) - 4:]
                        if len(a) == 18:
                            b = a[8:11] + a[2:4] + hex(int(a[4:6])).upper().replace('0X', '') + a[6:8] + a[len(a) - 5:]
                        b = b + second
                        if second != '.csv':
                            continue
                        if b in os.listdir(path):
                            continue
                        name = b
                        b = os.path.join(root, b)
                        print(file)
                        print(b)
                        print(name)
                        '''
                        book = xlrd.open_workbook(file)
                        new_book = copy.copy(book)
                        p = name
                        sheet = new_book.get_sheet(0)
                        sheet.write(0, 1, p)
                        new_book.save(file)
                        ,header=None
                        ,index=False
                        '''
                        data = []
                        with open(file, 'r', encoding='utf-8-sig') as f_input:
                            for line in f_input:
                                data.append(list(line.strip().split(',')))

                        dataset = pd.DataFrame(data)
                        # print(data)
                        print(dataset)
                        dataset.loc[0, 1] = name
                        print(dataset.loc[0, 1])
                        l = 0
                        dataset.to_csv(file, index=False, header=False)

                        '''
                                            with open(file, "w", newline='') as csvfile:
                            writer = csv.writer(csvfile, delimiter=',')
                        for datas in data:
                            l = l + 1
                            if datas == None:
                                continue
                            writer.writerow(datas)
                            print("已经写入{}条数据".format(l))
                        csvfile.close()
                        '''

                        os.rename(file, b)
            time.sleep(10)
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
