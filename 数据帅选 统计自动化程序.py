# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import threading

from PyQt5 import QtCore, QtGui, QtWidgets
from openpyxl import load_workbook
from matplotlib import pyplot as plt
from pylab import mpl
import pandas as pd
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(320, 240, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(130, 70, 72, 15))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(130, 150, 72, 15))
        self.label_2.setObjectName("label_2")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(210, 60, 331, 51))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(210, 150, 331, 51))
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(140, 340, 72, 15))
        self.label_3.setObjectName("label_3")
        self.plainTextEdit_3 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_3.setGeometry(QtCore.QRect(220, 330, 321, 161))
        self.plainTextEdit_3.setObjectName("plainTextEdit_3")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.pushButton.clicked.connect(self.click)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "开始"))
        self.label.setText(_translate("MainWindow", "文件1："))
        self.label_2.setText(_translate("MainWindow", "文件2："))
        self.label_3.setText(_translate("MainWindow", "结果："))
    def click(self):
        a = self.plainTextEdit.toPlainText()
        b = self.plainTextEdit_2.toPlainText()
        self.plainTextEdit_3.clear()
        try:
            workbook = load_workbook(b)
            sheets = workbook.worksheets
            sheet = sheets[0]
            nrow = sheet.max_row
            ncol = sheet.max_column
            start = 0
            end1 = 0
            for i in range(1, nrow + 1):
                if ('-' not in str(sheet.cell(i, 2).value)) and ('-' in str(sheet.cell(i + 1, 2).value)):
                    start = i
                if ('-' in str(sheet.cell(i, 2).value)) and ('-' not in str(sheet.cell(i + 1, 2).value)):
                    end1 = i
                    break
            dict1 = {}
            for i in range(start + 1, end1 + 1):
                key = sheet.cell(i, 2).value
                key = key.split("-")[0]
                key = float(key)
                if key not in dict1:
                    dict1[key] = [i]
                else:
                    dict1[key].append(i)
            data = pd.read_csv(a, header=None,
                               low_memory=False)
            sum = 0
            error_sideng = 0
            error_boduanpiandang = 0
            error_liangdupiandang = 0
            error_loudian = 0
            error_dianyapiandang = 0
            nice = 0
            bad = 0
            for i in range(10, len(data) - 1):  # 2 6 8
                v = data.iloc[i, 2]  # float
                p = data.iloc[i, 6]  # int
                w = data.iloc[i, 8]  # int
                r = data.iloc[i, 4]  # int
                if isinstance(v, float) or isinstance(p, float) or isinstance(w, float):
                    sum += 1
                    error_sideng += 1
                    bad += 1
                elif (int(float(w)) < 260) or (int(float(w)) > 280):
                    error_boduanpiandang += 1
                    sum += 1
                    bad += 1
                elif int(float(p)) < 2:
                    error_liangdupiandang += 1
                    sum += 1
                    bad += 1
                elif int(float(r)) > 1:
                    error_loudian += 1
                    sum += 1
                    bad += 1
                elif ((float(v[0:3])) >= 6.7) or ((float(v[0:3])) <= 5.1):
                    error_dianyapiandang += 1
                    sum += 1
                    bad += 1
                else:
                    v = float(v[0:3])
                    p = int(float(p))
                    w = int(float(w))
                    list_new = dict1[v]
                    for j in list_new:
                        v1 = sheet.cell(j, 2).value
                        p1 = sheet.cell(j, 3).value
                        w1 = sheet.cell(j, 4).value
                        v2 = float(v1.split('-')[0])
                        v3 = float(v1.split('-')[1])
                        p2 = float(p1.split('-')[0])
                        p3 = float(p1.split('-')[1])
                        w2 = float(w1.split('-')[0])
                        w3 = float(w1.split('-')[1])
                        if v2 <= v < v3 and w2 <= w < w3 and p2 <= p < p3:
                            if not isinstance(sheet.cell(j, 5).value, int):
                                sheet.cell(j, 5).value = 1
                            else:
                                sheet.cell(j, 5).value += 1
                        else:
                            continue
                    nice += 1
                    sum += 1
            sheet.cell(104, 5).value = error_sideng
            sheet.cell(105, 5).value = error_boduanpiandang
            sheet.cell(106, 5).value = error_liangdupiandang
            sheet.cell(107, 5).value = error_loudian
            sheet.cell(108, 5).value = error_dianyapiandang
            sheet.cell(110, 5).value = nice
            sheet.cell(111, 5).value = bad
            sheet.cell(112, 5).value = sum
            workbook.save(b)
            mpl.rcParams['font.sans-serif'] = ['SimHei']
            plt.figure(figsize=(6, 6))
            labels = [u'良品', u'死灯', u'波段偏档', u'亮度偏档', u'漏电', u'电压偏档']
            sizes = [nice, error_sideng, error_boduanpiandang, error_liangdupiandang, error_loudian,
                     error_dianyapiandang]
            colors = [u'red', u'yellowgreen', u'lightskyblue', u'b', u'g', u'c']
            explode = (0.1, 0, 0, 0, 0, 0.1)
            plt.pie(sizes, explode=explode, labels=labels, colors=colors,
                    labeldistance=1.1, autopct='%3.3f%%', shadow=False,
                    startangle=90, pctdistance=0.6)
            plt.axis('equal')
            plt.legend()
            plt.show()
            self.plainTextEdit_3.insertPlainText('运行成功！')
        except:
            self.plainTextEdit_3.insertPlainText('运行失败\n请检查文件种类或者文件内容是否正确！')
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
